Cross-validation is a vital step in evaluating a model. 
It maximizes the amount of data that is used to train the model, as during the course of training, the model is not only trained, but also tested on all of the available data.
By default, scikit-learn's cross_val_score() function uses R2 as the metric of choice for regression. 
Since you are performing 5-fold cross-validation, the function will return 5 scores. Compute these 5 scores and then take their average.

# Import the necessary modules
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import cross_val_score

# Create a linear regression object: reg
reg = LinearRegression()

# Compute 5-fold cross-validation scores: cv_scores
cv_scores = cross_val_score(reg, X, y, cv = 5)

# Print the 5-fold cross-validation scores
print(cv_scores)

print("Average 5-Fold CV Score: {}".format(np.mean(cv_scores)))


#To compare Time complexity of multiple K
%timeit cross_val_score(reg, X, y, cv = ____)
